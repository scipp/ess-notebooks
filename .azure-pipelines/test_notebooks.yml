jobs:
  - job: 'test_notebooks'
    displayName: 'test notebooks linux'
    timeoutInMinutes: 30
    pool:
        vmImage: 'ubuntu-18.04'
    variables:
        test_output: 'notebooks.xml'
    steps:
        - checkout: self
          submodules: true
        - bash: echo "##vso[task.prependpath]$CONDA/bin"
          displayName: 'add conda to PATH'
        - bash: |
           set -ex
           conda config --set always_yes yes --set changeps1 no
           echo is master $(is_release)
           conda env create -f ess-notebook-latest.yml
           source activate ess-notebook-latest
           git clone https://github.com/scipp/ess-notebooks-data.git data
           python make_config.py ${PWD}/data
           mkdir tests
           cp dataconfig.py tests/
           find . -not -path "*/\.*" -type f -name "*.ipynb"\
            | xargs jupyter nbconvert --to python --output-dir tests\
            --RegexRemovePreprocessor.patterns="['^# exclude-from-export']"
           touch $(test_output)
           echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?><testsuites><testsuite name=\"notebooks\">" >> $(test_output)
           exclude_list=(dataconfig.py livedata_mantid.py)
           for f in tests/*.py; do 
               found=0
               for g in "${exclude_list[@]}" ; do
                   [ "$f" = "tests/$g" ] && found=1
               done
               if [ "$found" = 0 ]; then
                   python "$f"
                   if [ $? != 0 ]; then
                       echo "<testcase classname=\"class\" name=\"$f\"><failure message=\"$f failed\"/></testcase>" >> $(test_output)
                   else
                       echo "<testcase classname=\"class\" name=\"$f\"/>" >> $(test_output)
                   fi
               fi
           done
           echo "</testsuite></testsuites>" >> $(test_output)
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: "**/$(test_output)"
            failTaskOnFailedTests: true
          displayName: 'Publish notebook test results'
          condition: succeededOrFailed()
